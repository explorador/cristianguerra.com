/**
 * Global styles. ðŸ’ª
 *
 * Note: "styled-components" is being used in this site.
 * This file is ONLY for typography styles
 * See: https://www.styled-components.com/docs
 */

 // Math Pow() for SASS: https://www.npmjs.com/package/sass-math-pow
@import "~sass-math-pow/sass/math-pow";
// Normalize styles.
@import "normalize";
// Color variables.
@import "variables";

/**
 * Typography variables.
 */
// Base font size.
$font-base-size: 19;
// Typography Scale Ratio: https://www.modularscale.com/?19&px&1.2
$typographyScaleRatio: 1.2;
// H tags "font-size" base.
$headingsBase: poly-pow($typographyScaleRatio, 1) * $font-base-size; // (ratio^n)*base

/**
 * em function
 * Converts px to em.
 */
@function em($pixels, $context: $font-base-size) {
	@return #{ $pixels / $context }em;
}

/*=============================================
= Typography
=============================================*/

*,
*:before,
*:after {
	box-sizing: border-box;
}

html {
	font-family: sans-serif;
	text-size-adjust: 100%;

	@media only screen and (max-width: 480px) {
		html {
			font-size: 100%;
		}
	}
}

body {
	background: $black;
	color: $white;
	font-size: #{$font-base-size}px;
	line-height: 1.75;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	font-feature-settings: "kern", "liga", "clig", "calt";
	font-kerning: normal;
}

p {
	margin-top: 0;
}

.p {
	font-size: 1em;
}

a {
	color: inherit;
	-webkit-text-decoration-skip: objects;
}

.text-color-primary {
	color: $primary-color;
}

.text-small {
	font-size: em(poly-pow($typographyScaleRatio, -1) * $font-base-size); // (ratio^n)*base
	line-height: 1.4;
}

/**
 * Headings h1-h6.
 */
@for $n from 1 through 6 {
	// Convert 1 to 6, 2 to 5, etc.
	$reverseN: 6 - $n + 1; // ArrayLength-n+1

	h#{$n},
	.h#{$n} {
		margin-top: 0;
		font-size: em(poly-pow($typographyScaleRatio, $reverseN) * $headingsBase); // (ratio^n)*base
		line-height: 1.170212766;
		text-rendering: optimizeLegibility;
	}

	h#{$n} {
		text-transform: uppercase;
	}
}

/**
 * Text css classes.
 * Use: .text-right | .text-uppercase , etc.
 */
$textClasses: (
	right: "align",
	center: "align",
	left: "align",
	uppercase: "transform",
	lowercase: "transform",
	capitalize: "transform",
);

@each $value, $property in $textClasses {
	.text-#{$value} {
		text-#{$property}: $value;
	}
}
